<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demo01</name>
	<description>Demo project for Spring Boot</description>

   <!-- 继承 spring boot 父包-->
    <!--spring-boot-starter-parent是Spring Boot的核心启动器，
        包含了自动配置、日志和YAML等大量默认的配置，大大简化了我们的开发。
         引入之后相关的starter引入就不需要添加version配置，
   spring boot会自动选择最合适的版本进行添加。-->

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
	    <!-- 构建web项目模块 包括了Tomcat和spring-webmvc -->
        <!-- spring-boot-starter-web 默认依赖了tomcat的starter 所以使得项目可以直接运行而不需要部署到tomcat中-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        <!-- pom.xml中依赖 spring-boot-starter-test 测试模块，包括JUnit、Hamcrest、Mockito -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- thymeleaf 模板引擎，用于渲染页面，
		还有FreeMarker、Velocity、Groovy、Mustache等模板引擎。不建议使用JSP-->
		<!-- 默认 src/main/resources/templates 目录为以上模板引擎的配置路径 -->
		<!-- thymeleaf和freemarker，哪个在上面，使用哪个模板 -->
		 <dependency> 
		    <groupId>org.springframework.boot</groupId> 
		    <artifactId>spring-boot-starter-thymeleaf</artifactId> 
		</dependency>

		<!-- freemarker 模板引擎 --> 
		<dependency> 
		    <groupId>org.springframework.boot</groupId> 
		    <artifactId>spring-boot-starter-freemarker</artifactId> 
		</dependency>
       
       
       <!-- mysql数据库驱动 --> 
       <dependency> 
          <groupId>mysql</groupId> 
          <artifactId>mysql-connector-java</artifactId> 
          <scope>runtime</scope>
       </dependency> 
       <!--持久层  数据层 Spring-data-jpa --> 
       <dependency> 
          <groupId>org.springframework.boot</groupId> 
          <artifactId>spring-boot-starter-data-jpa</artifactId> 
       </dependency>


		<!-- 支持热部署，项目文件内容修改不需要重启服务 -->
		<!-- 每自修改后， 程序自动启动spring Application上下文 -->
		<!-- <dependency>  
            <groupId>org.springframework.boot</groupId>  
            <artifactId>spring-boot-devtools</artifactId>  
            <optional>true</optional>  
      </dependency> --> 
      <!-- 热部署放在这里也可以 -->
	   <!-- <dependency>
			 <groupId>org.springframework</groupId>
			 <artifactId>springloaded</artifactId>
			 <version>1.2.5.RELEASE</version>
	   </dependency> -->
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!--  支持热部署,与上面的配置功能类似 -->
				<dependencies>
				      <dependency>
							 <groupId>org.springframework</groupId>
							 <artifactId>springloaded</artifactId>
							 <version>1.2.5.RELEASE</version>
					   </dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>


</project>
